Q: What is event bubbling in JavaScript? How can you prevent it?
A: Event bubbling is a phenomenon in JavaScript where an event triggered on a child element will "bubble up" through its parent elements in the DOM tree until it reaches the root element. This can cause unintended side effects or event collisions. To prevent event bubbling, you can use the stopPropagation() method on the event object to stop the event from propagating up the DOM tree.

Q: What is the difference between let and const in JavaScript?
A: The let keyword allows you to declare a variable that can be reassigned, while the const keyword allows you to declare a variable that cannot be reassigned. However, the value of a const variable can still be mutated if it is an object or an array.

Q: What is the difference between let and var in JavaScript?
A: The main difference between let and var in JavaScript is their scope. The var keyword declares a variable with function scope, meaning it can be accessed from anywhere within the function it was defined in, even before it was declared. The let keyword, on the other hand, declares a variable with block scope, meaning it can only be accessed within the block it was defined in, including any nested blocks. Another difference is that variables declared with let cannot be redeclared within the same block, while variables declared with var can be.

Q: What are the primitive data typesin JavaScript?
A: The primitive data types in JavaScript are:
string: a sequence of characters enclosed in single or double quotes
number: a numeric value, including integers and floating-point numbers
boolean: a value that can be either true or false
null: a value that represents the intentional absence of any object value
undefined: a value that represents a variable that has been declared but has not yet been assigned a value
symbol: a unique and immutable value that can be used as an object property identifier

Q: What is the difference between null and undefined in JavaScript?
A: In JavaScript, null and undefined represent absence of a value, but they are not the same thing. Null is an explicitly assigned value that represents the absence of any object value, while undefined is a variable that has been declared but has not yet been assigned a value. For example, if a variable is declared but not assigned a value, its value will be undefined. If a variable is assigned a value of null, its value will be null.

Q: What is a callback function in JavaScript, and how is it used?
A: A callback function is a function that is passed as an argument to another function and is executed later, often after an asynchronous operation has completed. The callback function allows the calling function to continue executing without waiting for the asynchronous operation to complete.

Q: What is the difference between map() and forEach() in JavaScript?
A: Both map() and forEach() are array methods in JavaScript, but they have different purposes. The forEach() method allows you to iterate over an array and execute a function for each element, while the map() method allows you to transform an array by executing a function on each element and returning a new array with the transformed values.

